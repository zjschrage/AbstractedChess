%P
%N
%B
%R
%Q
%K

?rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR

//Knight

$N1 = [-2, -1 ,1]
$N2 = [-1, -2 ,1]
$N3 = [1, -2 ,1]
$N4 = [2, -1 ,1]
$N5 = [-2, 1 ,1]
$N6 = [-1, 2 ,1]
$N7 = [1, 2 ,1]
$N8 = [2, 1 ,1]

N.does(N1, ~, ~)
N.does(N2, ~, ~)
N.does(N3, ~, ~)
N.does(N4, ~, ~)
N.does(N5, ~, ~)
N.does(N6, ~, ~)
N.does(N7, ~, ~)
N.does(N8, ~, ~)

//Bishop

$B1 = [-1, -1 ,-1]
$B2 = [-1, 1 ,-1]
$B3 = [1, -1 ,-1]
$B4 = [1, 1 ,-1]

B.does(B1, ~, ~)
B.does(B2, ~, ~)
B.does(B3, ~, ~)
B.does(B4, ~, ~)

//Rook

$R1 = [0, 1 ,-1]
$R2 = [0, -1 ,-1]
$R3 = [1, 0 ,-1]
$R4 = [-1, 0 ,-1]

R.does(R1, ~, ~)
R.does(R2, ~, ~)
R.does(R3, ~, ~)
R.does(R4, ~, ~)

//Queen

Q.does(B1, ~, ~)
Q.does(B2, ~, ~)
Q.does(B3, ~, ~)
Q.does(B4, ~, ~)
Q.does(R1, ~, ~)
Q.does(R2, ~, ~)
Q.does(R3, ~, ~)
Q.does(R4, ~, ~)

//King

$K1 = [-1, -1 ,1]
$K2 = [-1, 1 ,1]
$K3 = [1, -1 ,1]
$K4 = [1, 1 ,1]
$K5 = [0, 1 ,1]
$K6 = [0, -1 ,1]
$K7 = [1, 0 ,1]
$K8 = [-1, 0 ,1]

K.does(K1, ~, ~)
K.does(K2, ~, ~)
K.does(K3, ~, ~)
K.does(K4, ~, ~)
K.does(K5, ~, ~)
K.does(K6, ~, ~)
K.does(K7, ~, ~)
K.does(K8, ~, ~)

//Pawns

$P1 = [0, 1, 1]
$P2 = [0, 2, 1]
$P3 = [-1, 1, 1]
$P4 = [1, 1, 1]

$P1b = [0, -1, 1]
$P2b = [0, -2, 1]
$P3b = [-1, -1, 1]
$P4b = [1, -1, 1]

!first = [TIMES_MOVED, 0];

#PFC = (~, ~, </, first>)

#PIC1 = (~, <*, P1>, ~)
#PIC2 = (~, <*, P2>, ~)
#PCL  = (~, <-, P3>, ~)
#PCR  = (~, <-, P4>, ~)

P.onlyDoes(P1, ~, PIC1)
P.onlyDoes(P2, PFC, PIC1)
P.onlyDoes(P2, ~, PIC2)
P.onlyDoes(P3, PCL, ~)
P.onlyDoes(P4, PCR, ~)


#PIC1b = (~, <*, P1b>, ~)
#PIC2b = (~, <*, P2b>, ~)
#PCLb  = (~, <-, P3b>, ~)
#PCRb  = (~, <-, P4b>, ~)

p.onlyDoes(P1b, ~, PIC1b)
p.onlyDoes(P2b, PFC, PIC1b)
p.onlyDoes(P2b, ~, PIC2b)
p.onlyDoes(P3b, PCLb, ~)
p.onlyDoes(P4b, PCRb, ~)
